import subprocess

class VulnerabilityDetector:
    def __init__(self):
        self.vulnerabilities = []

    def detect_vulnerabilities(self):
        self._check_outdated_software()
        self._check_misconfigured_services()
        return self.vulnerabilities

    def _check_outdated_software(self):
        try:
            result = subprocess.run(["wmic", "qfe", "list", "full"], capture_output=True, text=True)
            if "Security Update" not in result.stdout:
                self.vulnerabilities.append("Outdated software detected.")
        except Exception:
            self.vulnerabilities.append("Failed to check for outdated software.")

    def _check_misconfigured_services(self):
        try:
            result = subprocess.run(["sc", "query"], capture_output=True, text=True)
            if "STOPPED" in result.stdout:
                self.vulnerabilities.append("Misconfigured services detected.")
        except Exception:
            self.vulnerabilities.append("Failed to check for misconfigured services.")ï¿¼Enter
